name: Update Coverage Badge

on:
  push:
    branches: [ main ]
    paths: [ 'moroshka-xcp-unity/CodeCoverage/Report/Summary.json' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-coverage-badge:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract Coverage Percentage
      id: coverage
      run: |
        if [ -f "moroshka-xcp-unity/CodeCoverage/Report/Summary.json" ]; then
          COVERAGE=$(jq -r '.summary.linecoverage' moroshka-xcp-unity/CodeCoverage/Report/Summary.json)
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"
        else
          echo "coverage=0" >> $GITHUB_OUTPUT
          echo "Coverage report not found, setting to 0%"
        fi

    - name: Determine Badge Color
      id: badge-color
      run: |
        COVERAGE=${{ steps.coverage.outputs.coverage }}
        if [ "$COVERAGE" -ge 90 ]; then
          COLOR="brightgreen"
        elif [ "$COVERAGE" -ge 80 ]; then
          COLOR="green"
        elif [ "$COVERAGE" -ge 70 ]; then
          COLOR="yellowgreen"
        elif [ "$COVERAGE" -ge 60 ]; then
          COLOR="yellow"
        elif [ "$COVERAGE" -ge 50 ]; then
          COLOR="orange"
        else
          COLOR="red"
        fi
        echo "color=$COLOR" >> $GITHUB_OUTPUT
        echo "Badge color: $COLOR"

    - name: Update Coverage Badge
      run: |
        cat > .github/badges/coverage.json << EOF
        {
          "schemaVersion": 1,
          "label": "coverage",
          "message": "${{ steps.coverage.outputs.coverage }}%",
          "color": "${{ steps.badge-color.outputs.color }}"
        }
        EOF

    - name: Check for changes
      id: check-changes
      run: |
        if git diff --quiet .github/badges/coverage.json; then
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No changes in coverage badge"
        else
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Coverage badge updated"
        fi

    - name: Commit and push coverage badge
      if: steps.check-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .github/badges/coverage.json
        git commit -m "ci: Update coverage badge to ${{ steps.coverage.outputs.coverage }}%"
        git push
